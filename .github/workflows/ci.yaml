# Mostly copied from the haskell/bytestring repo
name: ci

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04]
        ghc: ['8.0', '8.2', '8.4', '8.6', '8.8', '8.10', '9.0', '9.2', '9.4']
        include:
        - os: macOS-latest
          ghc: 'latest'
        - os: windows-latest
          ghc: 'latest'

    steps:

    - uses: actions/checkout@v3

    - name: Install prerequisites for GHC <= 8.2 on ubuntu-22.04
      if: runner.os == 'Linux' && matrix.ghc <= '8.2'
      run: |
        sudo apt-get install libncurses5 libtinfo5

    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}

    - name: Update cabal package database
      run: cabal update

    - name: Build plan
      run: cabal freeze --enable-tests --enable-benchmarks

    # Cache logic see https://github.com/haskell/actions/issues/7#issuecomment-745697160
    - uses: actions/cache@v3
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}-$${ github.sha }
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}-
          ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Test
      run: |
        set -e

        cabal build all
        cabal install ./core-tests
        export PATH=$HOME/.cabal/bin:$PATH

        (cd core-tests && tasty-core-tests +RTS -N2)
        core-tests/exit-status-tests.sh
        MSYS_NO_PATHCONV=1 core-tests/failing-pattern-test.sh

    - name: Test resource-release-test.sh
      if: runner.os != 'Windows'
      run: |
        export PATH=$HOME/.cabal/bin:$PATH
        core-tests/resource-release-test.sh

    - name: Haddock
      run: cabal haddock all
